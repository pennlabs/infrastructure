#!/bin/bash

set -euo pipefail

# Helper - run a command in the background and check the exit status
run_bg_and_check_exit() {
  "$@" &
  local pid=$!
  wait "$pid"
  local exit_status=$?
  if [ $exit_status -ne 0 ]; then
    echo "Error: command '$@' exited with non-zero status $exit_status"
    exit $exit_status
  fi
}

# Get current timestamp
STAMP=`date +"%Y%m%d - %A %d %B %Y @ %H:%M"`

# List all databases and remove default databases
DATABASES=`psql $DATABASE_URL/postgres -q -t -c 'SELECT datname from pg_database' | grep -v "\(postgres\|rdsadmin\|template0\|template1\)"`

echo "Starting backup"

# Dump each database and upload to S3
for DB in $DATABASES
do
  (FILENAME="$STAMP - $DB.sql.gz";
  echo "Creating dump of $DB";
  # Use the helper function to run the command in the background and check the exit status
  run_bg_and_check_exit pg_dump $DATABASE_URL/$DB | gzip > $DB.dump;
  echo "Uploading dump of $DB";
  # Use the helper function to run the command in the background and check the exit status
  run_bg_and_check_exit cat $DB.dump | aws s3 cp - "s3://$S3_BUCKET/$STAMP/$FILENAME") &
done

wait

echo "Backup finished successfully"
echo "Total data backed up: `du -hc *.dump | grep total | cut -f1`"
