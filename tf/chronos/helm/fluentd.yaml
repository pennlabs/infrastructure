image:
  repository: quay.io/fluentd_elasticsearch/fluentd
  tag: v3.0.1

resources:
  limits:
    cpu: 100m
    memory: 500Mi
  requests:
    cpu: 100m
    memory: 200Mi

elasticsearch:
  auth:
    enabled: false
  # host: "1ef5321198b14002b475a576a381b42f.us-east-1.aws.found.io"
  # port: 9243
  hosts: []
  scheme: "https"
  logLevel: "info"
  typeName: "fluentd"

configMaps:
  useDefaults:
    systemInputConf: false
    forwardInputConf: false
    monitoringConf: false
    outputConf: false

secret:
  - name: OUTPUT_USER
    secret_name: fluentd
    secret_key: ELASTIC_USER
  - name: OUTPUT_PASSWORD
    secret_name: fluentd
    secret_key: ELASTIC_PASSWORD
  - name: OUTPUT_HOSTS
    secret_name: fluentd
    secret_key: ELASTIC_HOSTS

# Nearly identical to the default output.conf, but we had to manually put
# in the user and password fields since the chart doesn't include the fields
# if elasticsearch.auth is disabled (which we have to do in order to hand in
# the env variables through k8s secrets).
extraConfigMaps:
  output.conf: |
    <filter kubernetes.**>
      @type kubernetes_metadata
    </filter>

    <match kubernetes.var.log.containers.**monitoring**.log>
      @type null
    </match>

    # <match **>
    #   @id elasticsearch
    #   @type elasticsearch
    #   @log_level "#{ENV['OUTPUT_LOG_LEVEL']}"
    #   include_tag_key true
    #   hosts "#{ENV['OUTPUT_HOSTS']}"
    #   path "#{ENV['OUTPUT_PATH']}"
    #   scheme "#{ENV['OUTPUT_SCHEME']}"
    #   ssl_verify "#{ENV['OUTPUT_SSL_VERIFY']}"
    #   ssl_version "#{ENV['OUTPUT_SSL_VERSION']}"
    #   user "#{ENV['OUTPUT_USER']}"
    #   password "#{ENV['OUTPUT_PASSWORD']}"
    #   logstash_format true
    #   logstash_prefix "#{ENV['LOGSTASH_PREFIX']}"
    #   reconnect_on_error true
    #   <buffer>
    #     @type file
    #     path /var/log/fluentd-buffers/kubernetes.system.buffer
    #     flush_mode interval
    #     retry_type exponential_backoff
    #     flush_thread_count 2
    #     flush_interval 5s
    #     retry_forever
    #     retry_max_interval 30
    #     chunk_limit_size "#{ENV['OUTPUT_BUFFER_CHUNK_LIMIT']}"
    #     queue_limit_length "#{ENV['OUTPUT_BUFFER_QUEUE_LIMIT']}"
    #     overflow_action block
    #   </buffer>
    # </match>
    <match **>
      @id elasticsearch
      @type "#{ENV['OUTPUT_TYPE']}"
      @log_level "#{ENV['OUTPUT_LOG_LEVEL']}"
      include_tag_key "#{ENV['OUTPUT_INCLUDE_TAG_KEY']}"
      hosts "#{ENV['OUTPUT_HOSTS']}"
      path "#{ENV['OUTPUT_PATH']}"
      scheme "#{ENV['OUTPUT_SCHEME']}"
      ssl_verify "#{ENV['OUTPUT_SSL_VERIFY']}"
      ssl_version "#{ENV['OUTPUT_SSL_VERSION']}"
      user "#{ENV['OUTPUT_USER']}"
      password "#{ENV['OUTPUT_PASSWORD']}"
      logstash_format "#{ENV['LOGSTASH_FORMAT']}"
      logstash_prefix "#{ENV['LOGSTASH_PREFIX']}"
      reconnect_on_error "#{ENV['OUTPUT_RECONNECT_ON_ERROR']}"
      reload_on_failure "#{ENV['OUTPUT_RELOAD_ON_FAILURE']}"
      reload_connections "#{ENV['OUTPUT_RELOAD_CONNECTIONS']}"
      <buffer>
        @type "#{ENV['OUTPUT_BUFFER_TYPE']}"
        path "#{ENV['OUTPUT_BUFFER_PATH']}"
        flush_mode "#{ENV['OUTPUT_BUFFER_FLUSH_MODE']}"
        retry_type "#{ENV['OUTPUT_BUFFER_RETRY_TYPE']}"
        flush_thread_count "#{ENV['OUTPUT_BUFFER_FLUSH_THREAD_TYPE']}"
        flush_interval "#{ENV['OUTPUT_BUFFER_FLUSH_INTERVAL']}"
        retry_forever "#{ENV['OUTPUT_BUFFER_RETRY_FOREVER']}"
        retry_max_interval "#{ENV['OUTPUT_BUFFER_RETRY_MAX_INTERVAL']}"
        chunk_limit_size "#{ENV['OUTPUT_BUFFER_CHUNK_LIMIT']}"
        queue_limit_length "#{ENV['OUTPUT_BUFFER_QUEUE_LIMIT']}"
        overflow_action "#{ENV['OUTPUT_BUFFER_OVERFLOW_ACTION']}"
      </buffer>
    </match>
