// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`workflow with 2 django+react projects 1`] = `
Object {
  "jobs": Object {
    "deploy": Object {
      "if": "github.ref == 'refs/heads/master'",
      "needs": Array [
        "publish-backend-one",
        "publish-backend-two",
        "publish-frontend-one",
        "publish-frontend-two",
      ],
      "runs-on": "ubuntu-latest",
      "steps": Array [
        Object {
          "uses": "actions/checkout@v2",
        },
        Object {
          "env": Object {
            "AWS_ACCOUNT_ID": "\${{ secrets.AWS_ACCOUNT_ID }}",
            "GIT_SHA": "\${{ github.sha }}",
            "REPOSITORY": "\${{ github.repository }}",
          },
          "id": "synth",
          "name": "Synth cdk8s manifests",
          "run": "cd k8s
yarn install

# get repo name (by removing owner/organization)
RELEASE_NAME=\${REPOSITORY#*/}

# Export RELEASE_NAME as an output
echo \\"::set-output RELEASE_NAME=$RELEASE_NAME\\"

yarn build",
        },
        Object {
          "env": Object {
            "AWS_ACCESS_KEY_ID": "\${{ secrets.GH_AWS_ACCESS_KEY_ID }}",
            "AWS_ACCOUNT_ID": "\${{ secrets.AWS_ACCOUNT_ID }}",
            "AWS_SECRET_ACCESS_KEY": "\${{ secrets.GH_AWS_SECRET_ACCESS_KEY }}",
          },
          "name": "Deploy",
          "run": "aws eks --region us-east-1 update-kubeconfig --name production --role-arn arn:aws:iam::\${AWS_ACCOUNT_ID}:role/kubectl

# get repo name from synth step
RELEASE_NAME=\${{ steps.synth.outputs.RELEASE_NAME }}

# Deploy
# TODO: figure out labels/deploy command
kubectl apply -f k8s/dist/ --prune -l app.kubernetes.io/part-of=$RELEASE_NAME",
        },
      ],
    },
    "django-check-one": Object {
      "container": Object {
        "image": "python:3.8-buster",
      },
      "env": Object {
        "DATABASE_URL": "postgres://postgres:postgres@postgres:5432/postgres",
      },
      "name": "Django Check one",
      "runs-on": "ubuntu-latest",
      "services": Object {
        "postgres": Object {
          "env": Object {
            "POSTGRES_DB": "postgres",
            "POSTGRES_PASSWORD": "postgres",
            "POSTGRES_USER": "postgres",
          },
          "image": "postgres:12",
          "options": "--health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5",
        },
      },
      "steps": Array [
        Object {
          "uses": "actions/checkout@v2",
        },
        Object {
          "name": "Cache",
          "uses": "actions/cache@v2",
          "with": Object {
            "key": "v0-\${{ hashFiles('backendOne/Pipfile.lock') }}",
            "path": "~/.local/share/virtualenvs",
          },
        },
        Object {
          "name": "Install Dependencies",
          "run": "cd backendOne
pip install pipenv
pipenv install --deploy --dev",
        },
        Object {
          "name": "Lint (flake8)",
          "run": "cd backendOne
pipenv run flake8 .",
        },
        Object {
          "name": "Lint (black)",
          "run": "cd backendOne
pipenv run black --check .",
        },
        Object {
          "name": "Test (run in parallel)",
          "run": "cd backendOne
pipenv run coverage run --concurrency=multiprocessing manage.py test --settings=projectOne.settings.ci --parallel
pipenv run coverage combine",
        },
        Object {
          "name": "Upload Code Coverage",
          "run": "ROOT=$(pwd)
cd backendOne
pipenv run codecov --root $ROOT --flags backend",
        },
      ],
    },
    "django-check-two": Object {
      "container": Object {
        "image": "python:3.8-buster",
      },
      "env": Object {
        "DATABASE_URL": "postgres://postgres:postgres@postgres:5432/postgres",
      },
      "name": "Django Check two",
      "runs-on": "ubuntu-latest",
      "services": Object {
        "postgres": Object {
          "env": Object {
            "POSTGRES_DB": "postgres",
            "POSTGRES_PASSWORD": "postgres",
            "POSTGRES_USER": "postgres",
          },
          "image": "postgres:12",
          "options": "--health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5",
        },
      },
      "steps": Array [
        Object {
          "uses": "actions/checkout@v2",
        },
        Object {
          "name": "Cache",
          "uses": "actions/cache@v2",
          "with": Object {
            "key": "v0-\${{ hashFiles('backendTwo/Pipfile.lock') }}",
            "path": "~/.local/share/virtualenvs",
          },
        },
        Object {
          "name": "Install Dependencies",
          "run": "cd backendTwo
pip install pipenv
pipenv install --deploy --dev",
        },
        Object {
          "name": "Lint (flake8)",
          "run": "cd backendTwo
pipenv run flake8 .",
        },
        Object {
          "name": "Lint (black)",
          "run": "cd backendTwo
pipenv run black --check .",
        },
        Object {
          "name": "Test (run in parallel)",
          "run": "cd backendTwo
pipenv run coverage run --concurrency=multiprocessing manage.py test --settings=projectTwo.settings.ci --parallel
pipenv run coverage combine",
        },
        Object {
          "name": "Upload Code Coverage",
          "run": "ROOT=$(pwd)
cd backendTwo
pipenv run codecov --root $ROOT --flags backend",
        },
      ],
    },
    "publish-backend-one": Object {
      "name": "Publish backend-one",
      "needs": "django-check-one",
      "runs-on": "ubuntu-latest",
      "steps": Array [
        Object {
          "uses": "actions/checkout@v2",
        },
        Object {
          "uses": "docker/setup-qemu-action@v1",
        },
        Object {
          "uses": "docker/setup-buildx-action@v1",
        },
        Object {
          "name": "Cache Docker layers",
          "uses": "actions/cache@v2",
          "with": Object {
            "key": "buildx-publish-backend-one",
            "path": "/tmp/.buildx-cache",
          },
        },
        Object {
          "uses": "docker/login-action@v1",
          "with": Object {
            "password": "\${{ secrets.DOCKER_PASSWORD }}",
            "username": "\${{ secrets.DOCKER_USERNAME }}",
          },
        },
        Object {
          "name": "Build/Publish",
          "uses": "docker/build-push-action@v2",
          "with": Object {
            "cache-from": "type=local,src=/tmp/.buildx-cache,type=registry,ref=pennlabs/imageOne-backend:latest",
            "cache-to": "type=local,dest=/tmp/.buildx-cache",
            "context": "backendOne",
            "file": "backendOne/Dockerfile",
            "push": "\${{ github.ref == 'refs/heads/master' }}",
            "tags": "pennlabs/imageOne-backend:latest,pennlabs/imageOne-backend:\${{ github.sha }}",
          },
        },
      ],
    },
    "publish-backend-two": Object {
      "name": "Publish backend-two",
      "needs": "django-check-two",
      "runs-on": "ubuntu-latest",
      "steps": Array [
        Object {
          "uses": "actions/checkout@v2",
        },
        Object {
          "uses": "docker/setup-qemu-action@v1",
        },
        Object {
          "uses": "docker/setup-buildx-action@v1",
        },
        Object {
          "name": "Cache Docker layers",
          "uses": "actions/cache@v2",
          "with": Object {
            "key": "buildx-publish-backend-two",
            "path": "/tmp/.buildx-cache",
          },
        },
        Object {
          "uses": "docker/login-action@v1",
          "with": Object {
            "password": "\${{ secrets.DOCKER_PASSWORD }}",
            "username": "\${{ secrets.DOCKER_USERNAME }}",
          },
        },
        Object {
          "name": "Build/Publish",
          "uses": "docker/build-push-action@v2",
          "with": Object {
            "cache-from": "type=local,src=/tmp/.buildx-cache,type=registry,ref=pennlabs/imageTwo-backend:latest",
            "cache-to": "type=local,dest=/tmp/.buildx-cache",
            "context": "backendTwo",
            "file": "backendTwo/Dockerfile",
            "push": "\${{ github.ref == 'refs/heads/master' }}",
            "tags": "pennlabs/imageTwo-backend:latest,pennlabs/imageTwo-backend:\${{ github.sha }}",
          },
        },
      ],
    },
    "publish-frontend-one": Object {
      "name": "Publish frontend-one",
      "needs": "react-check-one",
      "runs-on": "ubuntu-latest",
      "steps": Array [
        Object {
          "uses": "actions/checkout@v2",
        },
        Object {
          "uses": "docker/setup-qemu-action@v1",
        },
        Object {
          "uses": "docker/setup-buildx-action@v1",
        },
        Object {
          "name": "Cache Docker layers",
          "uses": "actions/cache@v2",
          "with": Object {
            "key": "buildx-publish-frontend-one",
            "path": "/tmp/.buildx-cache",
          },
        },
        Object {
          "uses": "docker/login-action@v1",
          "with": Object {
            "password": "\${{ secrets.DOCKER_PASSWORD }}",
            "username": "\${{ secrets.DOCKER_USERNAME }}",
          },
        },
        Object {
          "name": "Build/Publish",
          "uses": "docker/build-push-action@v2",
          "with": Object {
            "cache-from": "type=local,src=/tmp/.buildx-cache,type=registry,ref=pennlabs/imageOne-frontend:latest",
            "cache-to": "type=local,dest=/tmp/.buildx-cache",
            "context": "frontendOne",
            "file": "frontendOne/Dockerfile",
            "push": "\${{ github.ref == 'refs/heads/master' }}",
            "tags": "pennlabs/imageOne-frontend:latest,pennlabs/imageOne-frontend:\${{ github.sha }}",
          },
        },
      ],
    },
    "publish-frontend-two": Object {
      "name": "Publish frontend-two",
      "needs": "react-check-two",
      "runs-on": "ubuntu-latest",
      "steps": Array [
        Object {
          "uses": "actions/checkout@v2",
        },
        Object {
          "uses": "docker/setup-qemu-action@v1",
        },
        Object {
          "uses": "docker/setup-buildx-action@v1",
        },
        Object {
          "name": "Cache Docker layers",
          "uses": "actions/cache@v2",
          "with": Object {
            "key": "buildx-publish-frontend-two",
            "path": "/tmp/.buildx-cache",
          },
        },
        Object {
          "uses": "docker/login-action@v1",
          "with": Object {
            "password": "\${{ secrets.DOCKER_PASSWORD }}",
            "username": "\${{ secrets.DOCKER_USERNAME }}",
          },
        },
        Object {
          "name": "Build/Publish",
          "uses": "docker/build-push-action@v2",
          "with": Object {
            "cache-from": "type=local,src=/tmp/.buildx-cache,type=registry,ref=pennlabs/imageTwo-frontend:latest",
            "cache-to": "type=local,dest=/tmp/.buildx-cache",
            "context": "frontendTwo",
            "file": "frontendTwo/Dockerfile",
            "push": "\${{ github.ref == 'refs/heads/master' }}",
            "tags": "pennlabs/imageTwo-frontend:latest,pennlabs/imageTwo-frontend:\${{ github.sha }}",
          },
        },
      ],
    },
    "react-check-one": Object {
      "container": Object {
        "image": "node:14",
      },
      "name": "React Check one",
      "runs-on": "ubuntu-latest",
      "steps": Array [
        Object {
          "uses": "actions/checkout@v2",
        },
        Object {
          "name": "Cache",
          "uses": "actions/cache@v2",
          "with": Object {
            "key": "v0-\${{ hashFiles('frontendOne/yarn.lock') }}",
            "path": "**/node_modules",
          },
        },
        Object {
          "name": "Install Dependencies",
          "run": "cd frontendOne
yarn install --frozen-lockfile",
        },
        Object {
          "name": "Lint",
          "run": "cd frontendOne
yarn lint",
        },
        Object {
          "name": "Test",
          "run": "cd frontendOne
yarn test",
        },
        Object {
          "name": "Upload Code Coverage",
          "run": "ROOT=$(pwd)
cd frontendOne
yarn run codecov -p $ROOT -F frontend",
        },
      ],
    },
    "react-check-two": Object {
      "container": Object {
        "image": "node:14",
      },
      "name": "React Check two",
      "runs-on": "ubuntu-latest",
      "steps": Array [
        Object {
          "uses": "actions/checkout@v2",
        },
        Object {
          "name": "Cache",
          "uses": "actions/cache@v2",
          "with": Object {
            "key": "v0-\${{ hashFiles('frontendTwo/yarn.lock') }}",
            "path": "**/node_modules",
          },
        },
        Object {
          "name": "Install Dependencies",
          "run": "cd frontendTwo
yarn install --frozen-lockfile",
        },
        Object {
          "name": "Lint",
          "run": "cd frontendTwo
yarn lint",
        },
        Object {
          "name": "Test",
          "run": "cd frontendTwo
yarn test",
        },
        Object {
          "name": "Upload Code Coverage",
          "run": "ROOT=$(pwd)
cd frontendTwo
yarn run codecov -p $ROOT -F frontend",
        },
      ],
    },
  },
  "name": "Workflow",
  "on": "push",
}
`;
